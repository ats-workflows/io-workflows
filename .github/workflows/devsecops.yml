name: Synopsys DevSecOps

on:
  workflow_call:
    inputs:
      project-name:
        default: '.'
        required: false
        type: string
        description: "Workflow will assume the calling repository's name unless this parameter is overridden with the target project-name to use."
      branch-name:
        default: '.'
        required: false
        type: string
        description: "Workflow will assume the currently executing branch unless this parameter is overridden with the target branch to use."
      project-language:
        required: true
        type: string
        description: "If the project hasn't already been onboarded, this parameter will be used in the onboarding process. Valid options: Java, JavaScript, C++, C#, Go, Ruby, Python, Swift, PHP, Perl, Other"
      verbose-option:
        default: "Continue"
        required: false
        type: string
        description: "Toggle verbose logging. Options: 'Continue' (debug logging enabled) or 'SilentlyContinue' (debug logging disabled)"

jobs:
  synopsys-devsecops:
    name: Synopsys DevSecOps
    runs-on: self-hosted
    
    steps:
    # Checkout the project repository
    - name: Checkout Project Repository
      uses: actions/checkout@v3
      with: # Polaris PRs, Warning: [hxghq51d] HEAD is detached for this repo, using heuristics to find Git branch (branches show as /pull/1/merge where number is the PR number).
        fetch-depth: 2

    # Checkout the DevSecOps workflow repository
    - name: Checkout Synopsys Workflow
      uses: actions/checkout@v3
      with:
        repository: io-onboard/synopsys-workflows
        ref: main
        path: .synopsys
        token: ${{ secrets.SCM_TOKEN }}

    # Set input variables to the environment for use by the DevSecOps script
    - name: Establish Inputs
      shell: pwsh
      run: |
        $ProjectName = ("${{ inputs.project-name }}" -eq ".") ? "${{ github.repository_owner }}/${{ github.event.repository.name }}" : "${{ inputs.project-name }}"
        $BranchName = ("${{ inputs.branch-name }}" -eq ".") ? "${{ github.ref_name }}" : "${{ inputs.branch-name }}"
        
        echo "PROJECT_NAME=$ProjectName" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf8 -Append
        echo "BRANCH_NAME=$BranchName" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf8 -Append

    # Run the DevSecOps workflow
    - name: Synopsys DevSecOps
      run: |
        pwsh .synopsys/DevSecOps.ps1 \
          -IOURL ${{ secrets.IO_URL }} \
          -IOToken ${{ secrets.IO_TOKEN }} \
          -PolarisURL ${{ secrets.POLARIS_URL }} \
          -PolarisToken ${{ secrets.POLARIS_TOKEN }} \
          -CodeDxURL ${{ secrets.CODEDX_URL }} \
          -CodeDxToken ${{ secrets.CODEDX_TOKEN }} \
          -GitHubUserName ${{ github.actor }} \
          -GitHubAccessToken ${{ secrets.SCM_TOKEN }} \
          -RepositoryOwner ${{ github.repository_owner }} \
          -RepositoryName ${{ github.event.repository.name }} \
          -ProjectName $PROJECT_NAME \
          -BranchName $BRANCH_NAME \
          -ProjectLanguage ${{ inputs.project-language }} \
          -VerboseOption ${{ inputs.verbose-option }}
